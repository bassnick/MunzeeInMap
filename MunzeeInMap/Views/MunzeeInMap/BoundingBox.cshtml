@model System.String
@{
    ViewBag.Title = "Get In Bounding Box";
}
<html>
<head>
    <title>MIM</title>
    <script src="https://code.jquery.com/jquery-1.11.2.min.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/ol3/3.5.0/ol.css" type="text/css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ol3/3.5.0/ol.js"></script>

</head>
<body>
    
<h2>Získání výživného GPX pro GeoGet</h2>
@if (TempData["errorMessage"] != null && TempData["errorMessage"].ToString().Length > 0)
{
    <div style="color: red;"><em>@TempData["errorMessage"].ToString()</em></div>
}
<div>
    Jsou 2 možné způsoby vymezení oblasti:
    <ol>
        <li>Původní - kliknutím do mapy se nastaví střed, pak už stačí jen v textovém políčku Radius(km) nastavit poloměr kruhu, který bude vepsaný čtvercové oblasti, odkud bude bráno až 999 munzee. Je nutno potvrdit tlačítkem Odeslat.</li>
        <li>Nový - kliknutím do mapy zároveň se stisknutou klávesou Shift, následným držením klávesy a tažením myši se nastaví obdélník přímo. Okamžitě po ukončení označování dojde ke stahování zas až 999 munzee v této oblasti. K tomu dojde hned bez nutnosti stlačit tlačítko Odeslat.</li>
    </ol>
</div>
@using (Html.BeginForm("ForceExpiration", "MunzeeInMap", FormMethod.Get))
    {
        <input type="submit" value="Vynutit vymazání access tokenu"> <span>Hodí se, chcete-li aby systém zapomněl váš token v cookie a tak jste se mohli přihlásit jako někdo jiný</span>
    }
@using (Html.BeginForm("BoundingBox", "MunzeeInMap", FormMethod.Post, new { style = "float:left" }))
{
        @*        <input type="text" value="DGNE7HgXHnbZttTApinlyvmOauek8avZAm1YtSRo" name="access_token"/><br/>*@
    <input type="hidden" name="code" value="@Model"/>
    <br/>

        @*        <input type="checkbox" value="false" name="ExcludeOwn"/>*@
        @*        <br/>*@
        @*        <input type="checkbox" value="false" name="ExcludeCaptured"/>*@
        @*        <br />*@
        @*        <input type="checkbox" value="false" name="ExcludeMaintenance"/>*@

    <input type="hidden" value="" name="exclude" id="exclude"/> //options: own, captured, maintenance
    <input type="hidden" value="" name="fields" id="fields"/> //
        @*

                    1304554511

            munzee_id 	                    unique munzee ID
            friendly_name 	                munzee name
            notes 	                        munzee notes
            creator_user_id 	            munzee owner user ID
            creator_username 	            munzee owner username
            number_of_captures 	            the number of captures on that munzee
            has_user_captured_munzee 	    0 or 1 (for the authenticated user)
            owned_by_user 	                0 or 1 (for the authenticated user)
            maintenance 	                0 or 1 if munzee is in maintenance mode
            latitude 	                    location
            longitude 	                    location
            deployed 	                    0 or 1
            deployed_at 	                when the munzee got deployed
            archived 	                    0 or 1
            last_captured_at 	            when the munzee was captured last
            original_pin_image 	            munzee pin image URI
            proximity_radius_ft 	        radius of the proximity circle for a specific munzee and user combination
            last_updated_at 	            when the munzee was updated for the last time
            capture_type_id 	            the type ID (see list of munzee types)
            is_virtual 	                    0 or 1 if it’s a virtual munzee type
            code 	                        the URL to the munzee’s details page

        *@

    <input type="hidden" value="999" name="limit"/>
    <input type="hidden" name="points" value="" id="points"/>

    <label for="centerLat">Latitude</label>
    <input type="text" id="centerLat" name="centerLat" value="49,466935"/>
    <br/>
    <label for="centerLng">Longitude</label>
    <input type="text" id="centerLng" name="centerLng" value="17,970884"/>
    <br/>
    <label for="radiusKm">Radius(km)</label>
    <input type="text" id="radiusKm" name="radiusKm" value="5"/>
    <br/>
    <input id="submit" type="submit" value="Odeslat"/>
    <br/>
    <br/>
    <a href="http://bassnick.cz">Zpět na klany</a>




}
<div class="container-fluid">

    <div class="row-fluid">
        <div class="span12">
            <div id="map" class="map"></div>
        </div>
        <div class="span4 offset4 pull-right">
            <div id="info" class="alert alert-success">
                &nbsp;
            </div>
        </div>
    </div>

</div>
@*<div id="map" style=" float:left; height: 800px; width:800px;"></div>*@
<script type="text/javascript" language="javascript">
    $("#exclude").val("");
    $("#fields").val("munzee_id,friendly_name,notes,creator_user_id,creator_username,number_of_captures,has_user_captured_munzee,owned_by_user,maintenance,latitude,longitude,deployed,deployed_at,archived,last_captured_at,original_pin_image,proximity_radius_ft,last_updated_at,capture_type_id,is_virtual,code");
    var lonlat1;
    var lonlat2;

//$("#points").val("{\"box1\":{\"timestamp\": 0,\"lat2\":50.85229979649992,\"lng1\":12.919996137208939,\"lng2\":12.92009802365303,\"lat1\":50.84729979649992}}");
    var vectorSource = new ol.source.Vector({
        url: 'data/geojson/countries.geojson',
        format: new ol.format.GeoJSON()
    });


    var map = new ol.Map({
        layers: [
            new ol.layer.Tile({
                source: new ol.source.OSM()
            }),
            new ol.layer.Vector({
                source: vectorSource
            })
        ],
        renderer: 'canvas',
        target: 'map',
        view: new ol.View({
            center: [0, 0],
            zoom: 2
        })
    });

    // a normal select interaction to handle click
    var select = new ol.interaction.Select();

    map.addInteraction(select);

    var selectedFeatures = select.getFeatures();

    // a DragBox interaction used to select features by drawing boxes
    var dragBox = new ol.interaction.DragBox({
        condition: ol.events.condition.shiftKeyOnly,
        style: new ol.style.Style({
            stroke: new ol.style.Stroke({
                color: [0, 255, 150]

            })
        })

    });

    map.addInteraction(dragBox);

    dragBox.on('boxend', function (e) {
        // features that intersect the box are added to the collection of
        // selected features, and their names are displayed in the "info"
        // div

        var extent = dragBox.getGeometry().getExtent();
        lonlat2 = ol.proj.transform(e.coordinate, 'EPSG:3857', 'EPSG:4326');

        vectorSource.forEachFeatureIntersectingExtent(extent, function(feature) {
            selectedFeatures.push(feature);
        });
        $("#points").val("{\"box1\":{\"timestamp\": 0,\"lat2\":" + lonlat2[1] + ",\"lng1\":" + lonlat1[0] + ",\"lng2\":" + lonlat2[0] + ",\"lat1\":" + lonlat1[1] + "}}");
        $('#submit').click();

    });

        
    // clear selection when drawing a new box and when clicking on the map
    dragBox.on('boxstart', function(e) {
        selectedFeatures.clear();
        lonlat1 = ol.proj.transform(e.coordinate, 'EPSG:3857', 'EPSG:4326');
    });
    map.on('click', function(e) {
        selectedFeatures.clear();
        var lonlat = ol.proj.transform(e.coordinate, 'EPSG:3857', 'EPSG:4326');
        $("#centerLng").val(lonlat[0]);
        $("#centerLat").val(lonlat[1]);
    });

    
</script>

</body>
</html>
