@using MunzeeInMap.MunzeeAppObjects
@model System.Collections.Generic.List<MunzeeInMap.MunzeeAppObjects.Clan1605>

@{
    ViewBag.Title = "Klání 16/05";
}
<br />
@Html.RouteLink("Autorizace pro GPX data pro GeoGet", "Autorizace")
<br/>
<strong>Data z oficiálních klanových statistik MHQ. Aktualizováno jednou denně se začátkem munzee dne (tj. půlnoc Texaského času). U nás ráno v 7:00</strong>
<br/>

@foreach (var klan in Model)
{
    int totalPoints = 0;
    int totalActivityPoints = 0;
    
    Level1605 levelRequirements = new Level1605();

    if (klan.DetailScore.finalLevel == 0)
    { continue; }
    Requirements1605 req = levelRequirements.level[klan.DetailScore.finalLevel];
                
    <article>
        <table class="klan">
            <thead>
                <tr class="popis"><td colspan="5">Klání 16/05 - @klan.ClanName - cíl: level @klan.DetailScore.finalLevel.ToString()</td></tr>
            <tr><th>Hráč</th>@*<th>Deploy body</th><th>Capture body</th><th>Capture On body</th>*@<th>Bodů</th><th>Bodů za aktivitu</th></tr>
            </thead>
            <tbody>
            @{ int bodovaniHraci = klan.DetailScore.playerOrder.Count; }
            @for (int poradi = 0; poradi < bodovaniHraci; poradi++)
            {

                Battle1605 battle = @klan.DetailScore;
                string player = @battle.playerOrder[poradi + 1];
                int tot = (battle.total_points.ContainsKey(player)) ? battle.total_points[player] : 0;
                totalPoints += tot;
                int activityPts = (battle.activity_points.ContainsKey(player)) ? battle.activity_points[player] : 0;
                totalActivityPoints += activityPts;
                
                string printOK = ":)";
                <tr>
                    <td><strong>@player</strong></td>
@*                    <td>@dep</td>*@
@*                    <td>@cap</td>*@
@*                    <td>@con</td>*@
                    <td>@tot 
                    <span> (@((1000 * tot) / req.ClanPoints)%;@if (tot < req.ClanPoints / 10)
                            {
                                <span>@(tot - (req.ClanPoints / 10))</span>
                            })</span>    
                    </td>
                    <td>
                        @activityPts
                        <span>
                            (@((1000 * activityPts) / req.ClanActivityPts)%;@if (activityPts < req.ClanActivityPts / 10)
                            {
                                <span>@(activityPts - req.ClanActivityPts / 10)</span>
                            })
                        </span>
                    </td>
                </tr>
            }
            </tbody>
            <tfoot>
            @{
                int restClanPoints = totalPoints - req.ClanPoints;
                bool doneClan1 = restClanPoints >= 0;
            }
            <tr class="popis">
                <td></td>
                <td>@totalPoints.ToString()
                    @if (doneClan1)
                    {
                        <img class="fajfka" alt=":)" src="~/Content/zelena_fajfka-2.png"/>
                    }
                    else
                    {
                        <span><strong>(@restClanPoints)</strong></span>
                    }</td>
            
                @{
                    int restActivityPts = totalActivityPoints - req.ClanActivityPts;
                    bool doneClan2 = restActivityPts >= 0;
                }
                <td>
                    @totalActivityPoints.ToString()
                    @if (doneClan2)
                    {
                        <img class="fajfka" alt=":)" src="~/Content/zelena_fajfka-2.png"/>
                    }
                    else
                    {
                        <span><strong>(@restActivityPts)</strong></span>
                    }
                </td>
                </tr>
            </tfoot>
        </table>
    </article>
}
